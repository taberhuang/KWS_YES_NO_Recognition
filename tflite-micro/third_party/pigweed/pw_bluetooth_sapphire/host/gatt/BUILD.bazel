# Copyright 2024 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@rules_cc//cc:cc_library.bzl", "cc_library")
load("//pw_unit_test:pw_cc_test.bzl", "pw_cc_test")

package(
    default_visibility = ["//visibility:public"],
    features = [
        "-layering_check",
        "-ctad_warnings",
    ],
)

# Basic target with protocol definitions and no logic, suitable for test
# emulation.
cc_library(
    name = "definitions",
    srcs = [
        "gatt_defs.cc",
    ],
    hdrs = [
        "public/pw_bluetooth_sapphire/internal/host/gatt/gatt_defs.h",
    ],
    features = ["-conversion_warnings"],
    strip_include_prefix = "public",
    tags = ["noclangtidy"],
    deps = [
        "//pw_bluetooth_sapphire/host/att:definitions",
        "//pw_bluetooth_sapphire/host/common",
        "//third_party/fuchsia:fit",
    ],
)

cc_library(
    name = "persisted_data",
    hdrs = [
        "public/pw_bluetooth_sapphire/internal/host/gatt/persisted_data.h",
    ],
    features = ["-conversion_warnings"],
    strip_include_prefix = "public",
    deps = [
        ":definitions",
        "//third_party/fuchsia:fit",
    ],
)

cc_library(
    name = "gatt",
    srcs = [
        "client.cc",
        "connection.cc",
        "gatt.cc",
        "generic_attribute_service.cc",
        "local_service_manager.cc",
        "remote_characteristic.cc",
        "remote_service.cc",
        "remote_service_manager.cc",
        "server.cc",
        "types.cc",
    ],
    hdrs = [
        "public/pw_bluetooth_sapphire/internal/host/gatt/client.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/connection.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/gatt.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/generic_attribute_service.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/local_service_manager.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/persisted_data.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/remote_characteristic.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/remote_service.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/remote_service_manager.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/server.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/types.h",
    ],
    features = ["-conversion_warnings"],
    strip_include_prefix = "public",
    tags = ["noclangtidy"],
    deps = [
        ":definitions",
        "//pw_bluetooth_sapphire/host/att",
        "//third_party/fuchsia:fit",
    ],
)

cc_library(
    name = "testing",
    testonly = True,
    srcs = [
        "fake_client.cc",
        "fake_layer.cc",
        "mock_server.cc",
    ],
    hdrs = [
        "public/pw_bluetooth_sapphire/internal/host/gatt/fake_client.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/fake_layer.h",
        "public/pw_bluetooth_sapphire/internal/host/gatt/mock_server.h",
    ],
    features = ["-conversion_warnings"],
    implementation_deps = [
        "//pw_bluetooth_sapphire/host/common",
        "//pw_unit_test:googletest",
    ],
    strip_include_prefix = "public",
    deps = [
        ":gatt",
        "//pw_async:heap_dispatcher",
        "//pw_bluetooth_sapphire/host/att",
        "//pw_bluetooth_sapphire/host/testing:gtest_helpers",
        "//third_party/fuchsia:fit",
    ],
)

pw_cc_test(
    name = "gatt_test",
    srcs = [
        "client_test.cc",
        "gatt_test.cc",
        "generic_attribute_service_test.cc",
        "local_service_manager_test.cc",
        "remote_service_manager_test.cc",
        "server_test.cc",
    ],
    features = ["-conversion_warnings"],
    test_main = "//pw_bluetooth_sapphire/host/testing:gtest_main",
    deps = [
        ":gatt",
        ":testing",
        "//pw_bluetooth_sapphire/host/att",
        "//pw_bluetooth_sapphire/host/common:uuid_string_util",
        "//pw_bluetooth_sapphire/host/l2cap:testing",
        "//pw_bluetooth_sapphire/host/testing:gtest_helpers",
        "//pw_bluetooth_sapphire/host/testing:test_helpers",
    ],
)
