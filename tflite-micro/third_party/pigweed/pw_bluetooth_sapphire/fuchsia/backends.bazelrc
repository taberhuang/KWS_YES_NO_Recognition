# Copyright 2024 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# The following blocks exists to prevent almost all targets instantiated from
# @fuchsia_sdk rules/macros from being considered target_compatible_with unless
# `--config=fuchsia` is explicitly specified.
# This allows non-fuchsia globs like //... and all non-fuchsia-specific builders
# to ignore the problematic fuchsia-specific targets.
common --@rules_fuchsia//fuchsia/flags:fuchsia_targets_enabled=false
common:fuchsia --@rules_fuchsia//fuchsia/flags:fuchsia_targets_enabled

common:fuchsia --@pigweed//pw_assert:assert_backend=@pigweed//pw_assert_fuchsia:assert_backend
common:fuchsia --@pigweed//pw_assert:assert_backend_impl=@pigweed//pw_build:empty_cc_library
common:fuchsia --@pigweed//pw_assert:check_backend=@pigweed//pw_assert_fuchsia:check_backend
common:fuchsia --@pigweed//pw_assert:check_backend_impl=@pigweed//pw_build:empty_cc_library
common:fuchsia --@pigweed//pw_chrono:system_clock_backend=@pigweed//pw_chrono_stl:system_clock
common:fuchsia --@pigweed//pw_log:backend=@pigweed//pw_log_fuchsia
common:fuchsia --@pigweed//pw_log:backend_impl=@pigweed//pw_build:empty_cc_library
common:fuchsia --@pigweed//pw_unit_test:backend=@pigweed//pw_unit_test:googletest
common:fuchsia --@pigweed//pw_async:task_backend=@pigweed//pw_async_fuchsia:task
common:fuchsia --@pigweed//pw_async:fake_dispatcher_backend=@pigweed//pw_async_fuchsia:fake_dispatcher
common:fuchsia --@pigweed//pw_sync:mutex_backend=@pigweed//pw_sync_stl:mutex
common:fuchsia --@pigweed//pw_crypto:aes_backend=@pigweed//pw_crypto:aes_boringssl
common:fuchsia --@pigweed//pw_crypto:ecdh_backend=@pigweed//pw_crypto:ecdh_boringssl
common:fuchsia --@pigweed//pw_sync:interrupt_spin_lock_backend=@pigweed//pw_sync_stl:interrupt_spin_lock

# TODO: https://pwbug.dev/374340793 - This is a temporary workaround for now and
# this command line option shouldn't be applied more widely.
# Disable the injection of magic TestTrimmingTransition at analysis time
# which does not happen when aspects are visiting the configured graph,
# creating conflicts. See https://fxrev.dev/1047976.
build:fuchsia --experimental_retain_test_configuration_across_testonly
cquery:fuchsia --experimental_retain_test_configuration_across_testonly
aquery:fuchsia --experimental_retain_test_configuration_across_testonly

# The following flags are needed to build boringssl with the correct size
build:fuchsia --copt=-DBORINGSSL_ALLOW_CXX_RUNTIME
build:fuchsia --copt=-DOPENSSL_SMALL
build:fuchsia --copt=-DOPENSSL_NO_ASM
build:fuchsia --copt=-DOPENSSL_NO_SOCK
build:fuchsia --copt=-DNDEBUG
