# Copyright 2023 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
load("@rules_rust//rust:defs.bzl", "rust_doc", "rust_doc_test", "rust_library", "rust_test")
load("//pw_build:compatibility.bzl", "incompatible_with_mcu")

rust_library(
    name = "pw_stream",
    srcs = [
        "pw_stream/cursor.rs",
        "pw_stream/integer.rs",
        "pw_stream/lib.rs",
    ],
    crate_features = select({
        "//pw_build/constraints/rust:no_std": ["no_std"],
        "//conditions:default": [""],
    }),
    proc_macro_deps = ["@rust_crates//:paste"],
    visibility = ["//visibility:public"],
    deps = [
        "//pw_status/rust:pw_status",
        "//pw_varint/rust:pw_varint",
    ],
)

rust_test(
    name = "pw_stream_test",
    crate = ":pw_stream",
    crate_features = select({
        "//pw_build/constraints/rust:no_std": ["no_std"],
        "//conditions:default": [""],
    }),
    # TODO: b/343726867 - support on-device rust tests
    target_compatible_with = incompatible_with_mcu(),
)

rust_doc_test(
    name = "pw_stream_doc_test",
    crate = ":pw_stream",
    target_compatible_with = incompatible_with_mcu(),
)

rust_doc(
    name = "pw_stream_doc",
    crate = ":pw_stream",
    target_compatible_with = incompatible_with_mcu(),
)
