# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py

import("//build_overrides/pigweed.gni")

import("$pw_external_abseil_cpp/abseil-cpp.gni")

# Generated from @abseil-cpp//absl/strings:charset
abseil_cpp_source_set("charset") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/strings/charset.h" ]
  public_deps = [
    ":string_view",
    "../base:config",
  ]
}

# Generated from @abseil-cpp//absl/strings:cord
abseil_cpp_source_set("cord") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/cord.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/cord_buffer.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/cord.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/cord_analysis.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/cord_analysis.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/cord_buffer.cc",
  ]
  public_deps = [
    ":cord_internal",
    ":cordz_info",
    ":cordz_update_scope",
    ":cordz_update_tracker",
    ":internal",
    ":strings",
    "../base:config",
    "../base:core_headers",
    "../base:endian",
    "../base:nullability",
    "../base:raw_logging_internal",
    "../container:inlined_vector",
    "../crc:crc32c",
    "../crc:crc_cord_state",
    "../functional:function_ref",
    "../meta:type_traits",
    "../numeric:bits",
    "../types:compare",
    "../types:optional",
    "../types:span",
  ]
}

# Generated from @abseil-cpp//absl/strings:cord_internal
abseil_cpp_source_set("cord_internal") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_data_edge.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_internal.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_btree.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_btree_navigator.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_btree_reader.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_consume.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_crc.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_flat.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_internal.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_btree.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_btree_navigator.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_btree_reader.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_consume.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cord_rep_crc.cc",
  ]
  public_deps = [
    ":strings",
    "../base:base_internal",
    "../base:config",
    "../base:core_headers",
    "../base:endian",
    "../base:nullability",
    "../base:raw_logging_internal",
    "../container:compressed_tuple",
    "../container:container_memory",
    "../container:inlined_vector",
    "../crc:crc_cord_state",
    "../functional:function_ref",
    "../types:span",
  ]
}

# Generated from @abseil-cpp//absl/strings:cordz_functions
abseil_cpp_source_set("cordz_functions") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cordz_functions.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cordz_functions.cc",
  ]
  public_deps = [
    "../base:config",
    "../base:core_headers",
    "../base:raw_logging_internal",
    "../profiling:exponential_biased",
  ]
}

# Generated from @abseil-cpp//absl/strings:cordz_handle
abseil_cpp_source_set("cordz_handle") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cordz_handle.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cordz_handle.cc" ]
  public_deps = [
    "../base:config",
    "../base:no_destructor",
    "../base:raw_logging_internal",
    "../synchronization",
  ]
}

# Generated from @abseil-cpp//absl/strings:cordz_info
abseil_cpp_source_set("cordz_info") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cordz_info.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cordz_info.cc" ]
  public_deps = [
    ":cord_internal",
    ":cordz_functions",
    ":cordz_handle",
    ":cordz_statistics",
    ":cordz_update_tracker",
    "../base",
    "../base:config",
    "../base:core_headers",
    "../base:raw_logging_internal",
    "../container:inlined_vector",
    "../debugging:stacktrace",
    "../synchronization",
    "../time",
    "../types:span",
  ]
}

# Generated from @abseil-cpp//absl/strings:cordz_statistics
abseil_cpp_source_set("cordz_statistics") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cordz_statistics.h",
  ]
  public_deps = [
    ":cordz_update_tracker",
    "../base:config",
  ]
}

# Generated from @abseil-cpp//absl/strings:cordz_update_scope
abseil_cpp_source_set("cordz_update_scope") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cordz_update_scope.h",
  ]
  public_deps = [
    ":cord_internal",
    ":cordz_info",
    ":cordz_update_tracker",
    "../base:config",
    "../base:core_headers",
  ]
}

# Generated from @abseil-cpp//absl/strings:cordz_update_tracker
abseil_cpp_source_set("cordz_update_tracker") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/strings/internal/cordz_update_tracker.h" ]
  public_deps = [ "../base:config" ]
}

# Generated from @abseil-cpp//absl/strings:has_ostream_operator
abseil_cpp_source_set("has_ostream_operator") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/strings/has_ostream_operator.h" ]
  public_deps = [ "../base:config" ]
}

# Generated from @abseil-cpp//absl/strings:internal
abseil_cpp_source_set("internal") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/escaping.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/ostringstream.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/resize_uninitialized.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/utf8.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/escaping.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/ostringstream.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/utf8.cc",
  ]
  public_deps = [
    "../base:config",
    "../base:core_headers",
    "../base:endian",
    "../base:raw_logging_internal",
    "../meta:type_traits",
  ]
}

# Generated from @abseil-cpp//absl/strings:str_format
abseil_cpp_source_set("str_format") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/strings/str_format.h" ]
  public_deps = [
    ":str_format_internal",
    ":string_view",
    "../base:config",
    "../base:core_headers",
    "../base:nullability",
    "../types:span",
  ]
}

# Generated from @abseil-cpp//absl/strings:str_format_internal
abseil_cpp_source_set("str_format_internal") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/arg.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/bind.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/checker.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/constexpr_parser.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/extension.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/float_conversion.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/output.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/parser.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/arg.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/bind.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/extension.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/float_conversion.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/output.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_format/parser.cc",
  ]
  public_deps = [
    ":strings",
    "../base:config",
    "../base:core_headers",
    "../container:fixed_array",
    "../container:inlined_vector",
    "../functional:function_ref",
    "../meta:type_traits",
    "../numeric:bits",
    "../numeric:int128",
    "../numeric:representation",
    "../types:optional",
    "../types:span",
    "../utility",
  ]
}

# Generated from @abseil-cpp//absl/strings:string_view
abseil_cpp_source_set("string_view") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/strings/string_view.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/strings/string_view.cc" ]
  public_deps = [
    "../base",
    "../base:config",
    "../base:core_headers",
    "../base:nullability",
    "../base:throw_delegate",
  ]
}

# Generated from @abseil-cpp//absl/strings:strings
abseil_cpp_source_set("strings") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/ascii.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/charconv.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/escaping.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/has_absl_stringify.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/damerau_levenshtein_distance.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/string_constant.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/match.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/numbers.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/str_cat.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/str_join.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/str_replace.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/str_split.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/string_view.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/strip.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/substitute.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/strings/ascii.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/charconv.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/escaping.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/charconv_bigint.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/charconv_bigint.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/charconv_parse.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/charconv_parse.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/damerau_levenshtein_distance.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/memutil.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/memutil.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/stl_type_traits.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_join_internal.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/str_split_internal.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/stringify_sink.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/internal/stringify_sink.h",
    "$dir_pw_third_party_abseil_cpp/absl/strings/match.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/numbers.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/str_cat.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/str_replace.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/str_split.cc",
    "$dir_pw_third_party_abseil_cpp/absl/strings/substitute.cc",
  ]
  public_deps = [
    ":charset",
    ":internal",
    ":string_view",
    "../base",
    "../base:config",
    "../base:core_headers",
    "../base:endian",
    "../base:nullability",
    "../base:raw_logging_internal",
    "../base:throw_delegate",
    "../memory",
    "../meta:type_traits",
    "../numeric:bits",
    "../numeric:int128",
  ]
}
