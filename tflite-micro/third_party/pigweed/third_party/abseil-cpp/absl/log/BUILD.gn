# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py

import("//build_overrides/pigweed.gni")

import("$pw_external_abseil_cpp/abseil-cpp.gni")

# Generated from @abseil-cpp//absl/log:absl_vlog_is_on
abseil_cpp_source_set("absl_vlog_is_on") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/absl_vlog_is_on.h" ]
  public_deps = [
    "../base:config",
    "../base:core_headers",
    "../strings",
    "internal:vlog_config",
  ]
}

# Generated from @abseil-cpp//absl/log:check
abseil_cpp_source_set("check") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/check.h" ]
  public_deps = [
    "internal:check_impl",
    "internal:check_op",
    "internal:conditions",
    "internal:log_message",
    "internal:strip",
  ]
}

# Generated from @abseil-cpp//absl/log:globals
abseil_cpp_source_set("globals") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/globals.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/log/globals.cc" ]
  public_deps = [
    "../base:atomic_hook",
    "../base:config",
    "../base:core_headers",
    "../base:log_severity",
    "../base:raw_logging_internal",
    "../hash",
    "../strings",
    "internal:vlog_config",
  ]
}

# Generated from @abseil-cpp//absl/log:log
abseil_cpp_source_set("log") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/log.h" ]
  public_deps = [
    ":vlog_is_on",
    "internal:log_impl",
  ]
}

# Generated from @abseil-cpp//absl/log:log_entry
abseil_cpp_source_set("log_entry") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/log_entry.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/log/log_entry.cc" ]
  public_deps = [
    "../base:config",
    "../base:core_headers",
    "../base:log_severity",
    "../strings",
    "../time",
    "../types:span",
    "internal:config",
  ]
}

# Generated from @abseil-cpp//absl/log:log_sink
abseil_cpp_source_set("log_sink") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/log_sink.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/log/log_sink.cc" ]
  public_deps = [
    ":log_entry",
    "../base:config",
  ]
}

# Generated from @abseil-cpp//absl/log:log_sink_registry
abseil_cpp_source_set("log_sink_registry") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/log_sink_registry.h" ]
  public_deps = [
    ":log_sink",
    "../base:config",
    "../base:nullability",
    "internal:log_sink_set",
  ]
}

# Generated from @abseil-cpp//absl/log:vlog_is_on
abseil_cpp_source_set("vlog_is_on") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/vlog_is_on.h" ]
  public_deps = [ ":absl_vlog_is_on" ]
}
