# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py

import("//build_overrides/pigweed.gni")

import("$pw_external_abseil_cpp/abseil-cpp.gni")

# Generated from @abseil-cpp//absl/log/internal:append_truncated
abseil_cpp_source_set("append_truncated") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/append_truncated.h" ]
  public_deps = [
    "../../base:config",
    "../../strings",
    "../../types:span",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:check_impl
abseil_cpp_source_set("check_impl") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/check_impl.h" ]
  public_deps = [
    ":check_op",
    ":conditions",
    ":log_message",
    ":strip",
    "../../base:core_headers",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:check_op
abseil_cpp_source_set("check_op") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/check_op.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/check_op.cc" ]
  public_deps = [
    ":nullguard",
    ":nullstream",
    ":strip",
    "../../base",
    "../../base:config",
    "../../base:core_headers",
    "../../base:nullability",
    "../../debugging:leak_check",
    "../../strings",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:conditions
abseil_cpp_source_set("conditions") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/conditions.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/conditions.cc" ]
  public_deps = [
    ":voidify",
    "../../base",
    "../../base:config",
    "../../base:core_headers",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:config
abseil_cpp_source_set("config") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/config.h" ]
  public_deps = [
    "../../base:config",
    "../../base:core_headers",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:fnmatch
abseil_cpp_source_set("fnmatch") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/fnmatch.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/fnmatch.cc" ]
  public_deps = [
    "../../base:config",
    "../../strings",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:format
abseil_cpp_source_set("format") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/log_format.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/log_format.cc" ]
  public_deps = [
    ":append_truncated",
    ":config",
    ":globals",
    "../../base:config",
    "../../base:core_headers",
    "../../base:log_severity",
    "../../strings",
    "../../strings:str_format",
    "../../time",
    "../../types:span",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:globals
abseil_cpp_source_set("globals") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/globals.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/globals.cc" ]
  public_deps = [
    "../../base:config",
    "../../base:core_headers",
    "../../base:log_severity",
    "../../base:raw_logging_internal",
    "../../strings",
    "../../time",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:log_impl
abseil_cpp_source_set("log_impl") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/log_impl.h" ]
  public_deps = [
    ":conditions",
    ":log_message",
    ":strip",
    "..:absl_vlog_is_on",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:log_message
abseil_cpp_source_set("log_message") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/log_message.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/log_message.cc" ]
  public_deps = [
    ":append_truncated",
    ":format",
    ":globals",
    ":log_sink_set",
    ":nullguard",
    ":proto",
    ":structured_proto",
    "..:globals",
    "..:log_entry",
    "..:log_sink",
    "..:log_sink_registry",
    "../../base",
    "../../base:config",
    "../../base:core_headers",
    "../../base:errno_saver",
    "../../base:log_severity",
    "../../base:nullability",
    "../../base:raw_logging_internal",
    "../../base:strerror",
    "../../container:inlined_vector",
    "../../debugging:examine_stack",
    "../../memory",
    "../../strings",
    "../../time",
    "../../types:span",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:log_sink_set
abseil_cpp_source_set("log_sink_set") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/log_sink_set.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/log_sink_set.cc" ]
  public_deps = [
    ":config",
    ":globals",
    "..:globals",
    "..:log_entry",
    "..:log_sink",
    "../../base",
    "../../base:config",
    "../../base:core_headers",
    "../../base:log_severity",
    "../../base:no_destructor",
    "../../base:raw_logging_internal",
    "../../cleanup",
    "../../strings",
    "../../synchronization",
    "../../types:span",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:nullguard
abseil_cpp_source_set("nullguard") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/nullguard.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/nullguard.cc" ]
  public_deps = [
    "../../base:config",
    "../../base:core_headers",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:nullstream
abseil_cpp_source_set("nullstream") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/nullstream.h" ]
  public_deps = [
    "../../base:config",
    "../../base:core_headers",
    "../../base:log_severity",
    "../../strings",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:proto
abseil_cpp_source_set("proto") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/proto.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/proto.cc" ]
  public_deps = [
    "../../base",
    "../../base:config",
    "../../base:core_headers",
    "../../strings",
    "../../types:span",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:strip
abseil_cpp_source_set("strip") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/strip.h" ]
  public_deps = [
    ":log_message",
    ":nullstream",
    "../../base:core_headers",
    "../../base:log_severity",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:structured_proto
abseil_cpp_source_set("structured_proto") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/structured_proto.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/structured_proto.cc" ]
  public_deps = [
    ":proto",
    "../../base:config",
    "../../strings",
    "../../types:span",
    "../../types:variant",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:vlog_config
abseil_cpp_source_set("vlog_config") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/vlog_config.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/vlog_config.cc" ]
  public_deps = [
    ":fnmatch",
    "../../base",
    "../../base:config",
    "../../base:core_headers",
    "../../base:no_destructor",
    "../../memory",
    "../../strings",
    "../../synchronization",
    "../../types:optional",
  ]
}

# Generated from @abseil-cpp//absl/log/internal:voidify
abseil_cpp_source_set("voidify") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/log/internal/voidify.h" ]
  public_deps = [ "../../base:config" ]
}
