# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py

import("//build_overrides/pigweed.gni")

import("$pw_external_abseil_cpp/abseil-cpp.gni")

# Generated from @abseil-cpp//absl/debugging:bounded_utf8_length_sequence
abseil_cpp_source_set("bounded_utf8_length_sequence") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/bounded_utf8_length_sequence.h" ]
  public_deps = [
    "../base:config",
    "../numeric:bits",
  ]
}

# Generated from @abseil-cpp//absl/debugging:debugging_internal
abseil_cpp_source_set("debugging_internal") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/address_is_readable.h",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/elf_mem_image.h",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/vdso_support.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/address_is_readable.cc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/elf_mem_image.cc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/vdso_support.cc",
  ]
  public_deps = [
    "../base:config",
    "../base:core_headers",
    "../base:dynamic_annotations",
    "../base:errno_saver",
    "../base:raw_logging_internal",
  ]
}

# Generated from @abseil-cpp//absl/debugging:decode_rust_punycode
abseil_cpp_source_set("decode_rust_punycode") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/decode_rust_punycode.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/decode_rust_punycode.cc" ]
  public_deps = [
    ":bounded_utf8_length_sequence",
    ":utf8_for_code_point",
    "../base:config",
    "../base:nullability",
  ]
}

# Generated from @abseil-cpp//absl/debugging:demangle_internal
abseil_cpp_source_set("demangle_internal") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/demangle.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/demangle.cc" ]
  public_deps = [
    ":demangle_rust",
    "../base",
    "../base:config",
    "../base:core_headers",
    "../base:nullability",
    "../numeric:bits",
  ]
}

# Generated from @abseil-cpp//absl/debugging:demangle_rust
abseil_cpp_source_set("demangle_rust") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/demangle_rust.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/demangle_rust.cc",
  ]
  public_deps = [
    ":decode_rust_punycode",
    "../base:config",
    "../base:core_headers",
  ]
}

# Generated from @abseil-cpp//absl/debugging:examine_stack
abseil_cpp_source_set("examine_stack") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/examine_stack.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/examine_stack.cc",
  ]
  public_deps = [
    ":stacktrace",
    ":symbolize",
    "../base:config",
    "../base:core_headers",
    "../base:raw_logging_internal",
  ]
}

# Generated from @abseil-cpp//absl/debugging:leak_check
abseil_cpp_source_set("leak_check") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/debugging/leak_check.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/debugging/leak_check.cc" ]
  public_deps = [
    "../base:config",
    "../base:core_headers",
  ]
}

# Generated from @abseil-cpp//absl/debugging:stacktrace
abseil_cpp_source_set("stacktrace") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/debugging/stacktrace.h" ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/stacktrace_aarch64-inl.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/stacktrace_arm-inl.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/stacktrace_config.h",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/stacktrace_emscripten-inl.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/stacktrace_generic-inl.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/stacktrace_powerpc-inl.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/stacktrace_riscv-inl.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/stacktrace_unimplemented-inl.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/stacktrace_win32-inl.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/stacktrace_x86-inl.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/stacktrace.cc",
  ]
  public_deps = [
    ":debugging_internal",
    "../base:config",
    "../base:core_headers",
    "../base:dynamic_annotations",
    "../base:raw_logging_internal",
  ]
}

# Generated from @abseil-cpp//absl/debugging:symbolize
abseil_cpp_source_set("symbolize") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/symbolize.h",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/symbolize.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/debugging/symbolize.cc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/symbolize_darwin.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/symbolize_elf.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/symbolize_emscripten.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/symbolize_unimplemented.inc",
    "$dir_pw_third_party_abseil_cpp/absl/debugging/symbolize_win32.inc",
  ]
  public_deps = [
    ":debugging_internal",
    ":demangle_internal",
    "../base",
    "../base:config",
    "../base:core_headers",
    "../base:dynamic_annotations",
    "../base:malloc_internal",
    "../base:raw_logging_internal",
    "../strings",
  ]
}

# Generated from @abseil-cpp//absl/debugging:utf8_for_code_point
abseil_cpp_source_set("utf8_for_code_point") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/utf8_for_code_point.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/debugging/internal/utf8_for_code_point.cc" ]
  public_deps = [ "../base:config" ]
}
