# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py

import("//build_overrides/pigweed.gni")

import("$pw_external_abseil_cpp/abseil-cpp.gni")

# Generated from @abseil-cpp//absl/synchronization:graphcycles_internal
abseil_cpp_source_set("graphcycles_internal") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/graphcycles.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/graphcycles.cc" ]
  public_deps = [
    "../base",
    "../base:base_internal",
    "../base:config",
    "../base:core_headers",
    "../base:malloc_internal",
    "../base:raw_logging_internal",
  ]
}

# Generated from @abseil-cpp//absl/synchronization:kernel_timeout_internal
abseil_cpp_source_set("kernel_timeout_internal") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/kernel_timeout.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/kernel_timeout.cc" ]
  public_deps = [
    "../base",
    "../base:config",
    "../base:core_headers",
    "../base:raw_logging_internal",
    "../time",
  ]
}

# Generated from @abseil-cpp//absl/synchronization:synchronization
abseil_cpp_source_set("synchronization") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/barrier.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/blocking_counter.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/create_thread_identity.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/futex.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/futex_waiter.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/per_thread_sem.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/pthread_waiter.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/sem_waiter.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/stdcpp_waiter.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/waiter.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/waiter_base.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/win32_waiter.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/mutex.h",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/notification.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/barrier.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/blocking_counter.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/create_thread_identity.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/futex_waiter.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/per_thread_sem.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/pthread_waiter.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/sem_waiter.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/stdcpp_waiter.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/waiter_base.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/internal/win32_waiter.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/mutex.cc",
    "$dir_pw_third_party_abseil_cpp/absl/synchronization/notification.cc",
  ]
  public_deps = [
    ":graphcycles_internal",
    ":kernel_timeout_internal",
    "../base",
    "../base:atomic_hook",
    "../base:base_internal",
    "../base:config",
    "../base:core_headers",
    "../base:dynamic_annotations",
    "../base:malloc_internal",
    "../base:raw_logging_internal",
    "../base:tracing_internal",
    "../debugging:stacktrace",
    "../debugging:symbolize",
    "../time",
  ]
}
