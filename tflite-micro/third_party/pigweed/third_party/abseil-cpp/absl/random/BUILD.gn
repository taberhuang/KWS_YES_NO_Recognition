# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py

import("//build_overrides/pigweed.gni")

import("$pw_external_abseil_cpp/abseil-cpp.gni")

# Generated from @abseil-cpp//absl/random:bit_gen_ref
abseil_cpp_source_set("bit_gen_ref") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/random/bit_gen_ref.h" ]
  public_deps = [
    ":random",
    "../base:config",
    "../base:core_headers",
    "../base:fast_type_id",
    "../meta:type_traits",
    "internal:distribution_caller",
    "internal:fast_uniform_bits",
  ]
}

# Generated from @abseil-cpp//absl/random:distributions
abseil_cpp_source_set("distributions") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/random/bernoulli_distribution.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/beta_distribution.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/discrete_distribution.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/distributions.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/exponential_distribution.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/gaussian_distribution.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/log_uniform_int_distribution.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/poisson_distribution.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/uniform_int_distribution.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/uniform_real_distribution.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/zipf_distribution.h",
  ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/random/discrete_distribution.cc",
    "$dir_pw_third_party_abseil_cpp/absl/random/gaussian_distribution.cc",
  ]
  public_deps = [
    "../base:base_internal",
    "../base:config",
    "../base:core_headers",
    "../meta:type_traits",
    "../strings",
    "internal:distribution_caller",
    "internal:fast_uniform_bits",
    "internal:fastmath",
    "internal:generate_real",
    "internal:iostream_state_saver",
    "internal:traits",
    "internal:uniform_helper",
    "internal:wide_multiply",
  ]
}

# Generated from @abseil-cpp//absl/random:random
abseil_cpp_source_set("random") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/random/random.h" ]
  public_deps = [
    ":distributions",
    ":seed_sequences",
    "internal:nonsecure_base",
    "internal:pcg_engine",
    "internal:pool_urbg",
    "internal:randen_engine",
  ]
}

# Generated from @abseil-cpp//absl/random:seed_gen_exception
abseil_cpp_source_set("seed_gen_exception") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/random/seed_gen_exception.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/seed_gen_exception.cc" ]
  public_deps = [
    "../base:config",
    "../base:raw_logging_internal",
  ]
}

# Generated from @abseil-cpp//absl/random:seed_sequences
abseil_cpp_source_set("seed_sequences") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/random/seed_sequences.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/random/seed_sequences.cc" ]
  public_deps = [
    ":seed_gen_exception",
    "../base:config",
    "../base:nullability",
    "../strings:string_view",
    "../types:span",
    "internal:pool_urbg",
    "internal:salted_seed_seq",
    "internal:seed_material",
  ]
}
