# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py

import("//build_overrides/pigweed.gni")

import("$pw_external_abseil_cpp/abseil-cpp.gni")

# Generated from @abseil-cpp//absl/random/internal:distribution_caller
abseil_cpp_source_set("distribution_caller") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/random/internal/distribution_caller.h",
  ]
  public_deps = [
    "../../base:config",
    "../../base:fast_type_id",
    "../../meta:type_traits",
    "../../utility",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:fast_uniform_bits
abseil_cpp_source_set("fast_uniform_bits") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/random/internal/fast_uniform_bits.h",
  ]
  public_deps = [
    ":traits",
    "../../base:config",
    "../../meta:type_traits",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:fastmath
abseil_cpp_source_set("fastmath") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/fastmath.h" ]
  public_deps = [ "../../numeric:bits" ]
}

# Generated from @abseil-cpp//absl/random/internal:generate_real
abseil_cpp_source_set("generate_real") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/generate_real.h" ]
  public_deps = [
    ":fastmath",
    ":traits",
    "../../meta:type_traits",
    "../../numeric:bits",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:iostream_state_saver
abseil_cpp_source_set("iostream_state_saver") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/iostream_state_saver.h" ]
  public_deps = [
    "../../base:config",
    "../../meta:type_traits",
    "../../numeric:int128",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:nonsecure_base
abseil_cpp_source_set("nonsecure_base") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/nonsecure_base.h" ]
  public_deps = [
    ":pool_urbg",
    ":salted_seed_seq",
    ":seed_material",
    "../../base:core_headers",
    "../../container:inlined_vector",
    "../../meta:type_traits",
    "../../types:span",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:pcg_engine
abseil_cpp_source_set("pcg_engine") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/pcg_engine.h" ]
  public_deps = [
    ":fastmath",
    ":iostream_state_saver",
    "../../base:config",
    "../../meta:type_traits",
    "../../numeric:bits",
    "../../numeric:int128",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:platform
abseil_cpp_source_set("platform") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen_traits.h" ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen_round_keys.cc",
  ]
  public_deps = [ "../../base:config" ]
}

# Generated from @abseil-cpp//absl/random/internal:pool_urbg
abseil_cpp_source_set("pool_urbg") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/pool_urbg.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/pool_urbg.cc" ]
  public_deps = [
    ":randen",
    ":seed_material",
    ":traits",
    "..:seed_gen_exception",
    "../../base",
    "../../base:config",
    "../../base:core_headers",
    "../../base:endian",
    "../../base:raw_logging_internal",
    "../../types:span",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:randen
abseil_cpp_source_set("randen") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen.cc" ]
  public_deps = [
    ":platform",
    ":randen_hwaes",
    ":randen_slow",
    "../../base:raw_logging_internal",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:randen_engine
abseil_cpp_source_set("randen_engine") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen_engine.h" ]
  public_deps = [
    ":iostream_state_saver",
    ":randen",
    "../../base:endian",
    "../../meta:type_traits",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:randen_hwaes
abseil_cpp_source_set("randen_hwaes") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen_detect.h",
    "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen_hwaes.h",
  ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen_detect.cc" ]
  public_deps = [
    ":platform",
    ":randen_hwaes_impl",
    "../../base:config",
    "../../types:optional",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:randen_hwaes_impl
abseil_cpp_source_set("randen_hwaes_impl") {
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen_hwaes.cc",
    "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen_hwaes.h",
  ]
  cflags = [ "-Wno-pass-failed" ]
  public_deps = [
    ":platform",
    "../../base:config",
    "../../base:core_headers",
    "../../numeric:int128",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:randen_slow
abseil_cpp_source_set("randen_slow") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen_slow.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/randen_slow.cc" ]
  public_deps = [
    ":platform",
    "../../base:config",
    "../../base:core_headers",
    "../../base:endian",
    "../../numeric:int128",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:salted_seed_seq
abseil_cpp_source_set("salted_seed_seq") {
  public = [
    "$dir_pw_third_party_abseil_cpp/absl/random/internal/salted_seed_seq.h",
  ]
  public_deps = [
    ":seed_material",
    "../../container:inlined_vector",
    "../../meta:type_traits",
    "../../types:optional",
    "../../types:span",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:seed_material
abseil_cpp_source_set("seed_material") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/seed_material.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/seed_material.cc" ]
  public_deps = [
    ":fast_uniform_bits",
    "../../base:core_headers",
    "../../base:dynamic_annotations",
    "../../base:raw_logging_internal",
    "../../strings",
    "../../types:optional",
    "../../types:span",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:traits
abseil_cpp_source_set("traits") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/traits.h" ]
  public_deps = [
    "../../base:config",
    "../../numeric:bits",
    "../../numeric:int128",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:uniform_helper
abseil_cpp_source_set("uniform_helper") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/uniform_helper.h" ]
  public_deps = [
    ":traits",
    "../../base:config",
    "../../meta:type_traits",
  ]
}

# Generated from @abseil-cpp//absl/random/internal:wide_multiply
abseil_cpp_source_set("wide_multiply") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/random/internal/wide_multiply.h" ]
  public_deps = [
    ":traits",
    "../../base:config",
    "../../numeric:bits",
    "../../numeric:int128",
  ]
}
