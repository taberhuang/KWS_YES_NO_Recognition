# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# DO NOT MANUALLY EDIT!
# This file was automatically generated by pw_build/gn_writer.py

import("//build_overrides/pigweed.gni")

import("$pw_external_abseil_cpp/abseil-cpp.gni")

# Generated from @abseil-cpp//absl/hash:city
abseil_cpp_source_set("city") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/hash/internal/city.h" ]
  sources = [ "$dir_pw_third_party_abseil_cpp/absl/hash/internal/city.cc" ]
  public_deps = [
    "../base:config",
    "../base:core_headers",
    "../base:endian",
  ]
}

# Generated from @abseil-cpp//absl/hash:hash
abseil_cpp_source_set("hash") {
  public = [ "$dir_pw_third_party_abseil_cpp/absl/hash/hash.h" ]
  sources = [
    "$dir_pw_third_party_abseil_cpp/absl/hash/internal/hash.cc",
    "$dir_pw_third_party_abseil_cpp/absl/hash/internal/hash.h",
  ]
  public_deps = [
    ":city",
    ":low_level_hash",
    "../base:config",
    "../base:core_headers",
    "../base:endian",
    "../container:fixed_array",
    "../functional:function_ref",
    "../meta:type_traits",
    "../numeric:bits",
    "../numeric:int128",
    "../strings",
    "../types:optional",
    "../types:variant",
    "../utility",
  ]
}

# Generated from @abseil-cpp//absl/hash:low_level_hash
abseil_cpp_source_set("low_level_hash") {
  public =
      [ "$dir_pw_third_party_abseil_cpp/absl/hash/internal/low_level_hash.h" ]
  sources =
      [ "$dir_pw_third_party_abseil_cpp/absl/hash/internal/low_level_hash.cc" ]
  public_deps = [
    "../base:config",
    "../base:endian",
    "../base:prefetch",
    "../numeric:int128",
  ]
}
