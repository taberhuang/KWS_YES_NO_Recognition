# Copyright 2021 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@rules_cc//cc:cc_library.bzl", "cc_library")
load("@rules_python//sphinxdocs:sphinx_docs_library.bzl", "sphinx_docs_library")
load("//pw_build:compatibility.bzl", "incompatible_with_mcu")
load("//pw_build:python.bzl", "pw_py_binary")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

cc_library(
    name = "config_assert",
    hdrs = [
        "public/pw_third_party/freertos/config_assert.h",
    ],
    defines = select({
        "@freertos//:disable_task_statics": [
            "PW_THIRD_PARTY_FREERTOS_NO_STATICS=1",
        ],
        "//conditions:default": [],
    }),
    strip_include_prefix = "public",
    target_compatible_with = [
        "//pw_build/constraints/rtos:freertos",
    ],
    deps = [
        "//pw_assert:assert",
        "//pw_assert:check",
    ],
)

alias(
    name = "freertos_config",
    actual = select({
        "//targets/rp2040:freertos_config_cv": "//targets/rp2040:freertos_config",
        "//targets/stm32f429i_disc1_stm32cube:freertos_config_cv": "//targets/stm32f429i_disc1_stm32cube:freertos_config",
        "//conditions:default": "@freertos//:default_freertos_config",
    }),
)

cc_library(
    name = "support",
    srcs = [
        "pw_assert_malloc_failed_hook.cc",
        "pw_assert_stack_overflow_hook.cc",
        "static_task_allocation.cc",
    ],
    implementation_deps = ["//pw_assert:check"],
    target_compatible_with = [
        "//pw_build/constraints/rtos:freertos",
    ],
    deps = [
        "//pw_string:util",
        "@freertos",
    ],
    alwayslink = True,
)

filegroup(
    name = "doxygen",
    srcs = [
        "pw_assert_stack_overflow_hook.cc",
        "static_task_allocation.cc",
    ],
)

sphinx_docs_library(
    name = "docs",
    srcs = [
        "docs.rst",
    ],
    target_compatible_with = incompatible_with_mcu(),
)

pw_py_binary(
    name = "parse_freertos_version",
    srcs = ["parse_freertos_version.py"],
)
