# Copyright 2021 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@rules_cc//cc:cc_library.bzl", "cc_library")
load("@rules_python//sphinxdocs:sphinx_docs_library.bzl", "sphinx_docs_library")
load("//pw_build:compatibility.bzl", "incompatible_with_mcu")
load("//pw_unit_test:pw_cc_test.bzl", "pw_cc_test")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

cc_library(
    name = "pw_work_queue",
    hdrs = [
        "public/pw_work_queue/work_queue.h",
    ],
    strip_include_prefix = "public",
    deps = [
        "//pw_assert:assert",
        "//pw_containers:inline_queue",
        "//pw_function",
        "//pw_metric:metric",
        "//pw_span",
        "//pw_status",
        "//pw_sync:interrupt_spin_lock",
        "//pw_sync:lock_annotations",
        "//pw_sync:thread_notification",
        "//pw_thread:thread",
        "//pw_thread:thread_core",
    ],
)

cc_library(
    name = "test_thread_header",
    hdrs = ["public/pw_work_queue/test_thread.h"],
    strip_include_prefix = "public",
    deps = ["//pw_thread:thread"],
)

cc_library(
    name = "work_queue_test",
    testonly = True,
    srcs = [
        "work_queue_test.cc",
    ],
    deps = [
        ":pw_work_queue",
        ":stl_test_thread",
        ":test_thread_header",
        "//pw_function",
        "//pw_log",
        "//pw_sync:thread_notification",
        "//pw_thread:thread",
        "//pw_unit_test",
    ],
)

cc_library(
    name = "stl_test_thread",
    srcs = [
        "stl_test_thread.cc",
    ],
    target_compatible_with = incompatible_with_mcu(),
    deps = [
        ":test_thread_header",
        "//pw_thread:thread",
        "//pw_thread_stl:options",
    ],
)

pw_cc_test(
    name = "stl_work_queue_test",
    target_compatible_with = incompatible_with_mcu(),
    deps = [
        ":stl_test_thread",
        ":work_queue_test",
    ],
)

filegroup(
    name = "doxygen",
    srcs = [
        "public/pw_work_queue/work_queue.h",
    ],
)

sphinx_docs_library(
    name = "docs",
    srcs = [
        "docs.rst",
    ],
    prefix = "pw_work_queue/",
    target_compatible_with = incompatible_with_mcu(),
)
