# Copyright 2021 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

import("//build_overrides/pigweed.gni")

import("$dir_pw_build/target_types.gni")
import("$dir_pw_unit_test/test.gni")

config("public_include_path") {
  include_dirs = [ "public" ]
}

group("pw_spi") {
  deps = [
    ":chip_selector",
    ":chip_selector_digital_out",
    ":device",
    ":initiator",
  ]
}

pw_source_set("initiator") {
  public_configs = [ ":public_include_path" ]
  public = [ "public/pw_spi/initiator.h" ]
  public_deps = [
    "$dir_pw_assert",
    "$dir_pw_bytes",
    "$dir_pw_status",
  ]
}

pw_source_set("responder") {
  public_configs = [ ":public_include_path" ]
  public = [ "public/pw_spi/responder.h" ]
  public_deps = [
    "$dir_pw_bytes",
    "$dir_pw_function",
    "$dir_pw_status",
  ]
}

pw_source_set("chip_selector") {
  public_configs = [ ":public_include_path" ]
  public = [ "public/pw_spi/chip_selector.h" ]
  public_deps = [ "$dir_pw_status" ]
}

pw_source_set("chip_selector_digital_out") {
  public_configs = [ ":public_include_path" ]
  public = [ "public/pw_spi/chip_selector_digital_out.h" ]
  public_deps = [
    ":chip_selector",
    "$dir_pw_digital_io",
    "$dir_pw_status",
  ]
}

pw_source_set("device") {
  public_configs = [ ":public_include_path" ]
  public = [ "public/pw_spi/device.h" ]
  public_deps = [
    ":chip_selector",
    ":initiator",
    "$dir_pw_bytes",
    "$dir_pw_status",
    "$dir_pw_sync:borrow",
  ]
}

pw_source_set("mock") {
  public_configs = [ ":public_include_path" ]
  public = [
    "public/pw_spi/chip_selector_mock.h",
    "public/pw_spi/initiator_mock.h",
  ]
  sources = [ "initiator_mock.cc" ]
  public_deps = [
    ":chip_selector",
    ":initiator",
    "$dir_pw_bytes",
    "$dir_pw_containers:to_array",
  ]
  deps = [
    "$dir_pw_assert",
    "$dir_pw_containers",
    "$dir_pw_unit_test",
  ]
}

pw_test_group("tests") {
  tests = [
    ":spi_test",
    ":initiator_mock_test",
  ]
}

pw_test("spi_test") {
  sources = [ "spi_test.cc" ]
  deps = [
    ":device",
    ":responder",
    "$dir_pw_sync:mutex",
  ]
}

pw_test("initiator_mock_test") {
  sources = [ "initiator_mock_test.cc" ]
  deps = [
    ":mock",
    "$dir_pw_containers",
  ]
}
