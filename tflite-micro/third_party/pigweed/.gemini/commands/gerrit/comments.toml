# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
description = "Fetch and address comments on a Gerrit CL"
prompt = """
## Code review response workflow

Pigweed development happens on Gerrit, and you can help users get changes
through the review process by automating parts of the review flow. When the
user asks for reading review comments, do this:

1.  Get change ID from the last couple git commits or ask user for it
2.  Execute this command to get list of comments:
    `./pw change comments --json <CHANGE_ID>`
    If you provide no change id, it will auto fetch last commits comments.
3.  Read the relevant file and get the surrounding context in the file
    mentioned.
4.  List down comments (and address them if user asked to) along with exact
    ONE line in code where it belongs. Also include comment ID from API for
    each comment and line number it points to. Show these as a todo list
    neatly, use this markdown format:
    ```
    **my_awesome_code.js**
    **15:** John: This variable name is a bit confusing.
    Lee: I agree, let's rename d to elapsedTimeInDays.

    **32:** Should we add validation for this input?
    ````

### Responding to comments on Gerrit

If the user asks to send a response to a comment or a few, you can respond
to a comment by sending an .gitcookies authenticated response like this:

```
curl \
  -X PUT \
  --cookie ~/.gitcookies \
  --header "Content-Type: application/json; charset=UTF-8" \
  --data 	'{ "in_reply_to": "PARENT_COMMENT_ID", "message": "...", "path": "<FILE_PATH>", "line": 23, }' \
  "https://pigweed-review.googlesource.com/changes/{ID}/revisions/{REVISION_ID}/drafts"
```

Make sure to set path and line to same as parent comment.
"""
