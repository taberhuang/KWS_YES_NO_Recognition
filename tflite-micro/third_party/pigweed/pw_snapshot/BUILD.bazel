# Copyright 2021 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@com_google_protobuf//bazel:proto_library.bzl", "proto_library")
load("@rules_cc//cc:cc_library.bzl", "cc_library")
load("@rules_python//python:proto.bzl", "py_proto_library")
load("@rules_python//sphinxdocs:sphinx_docs_library.bzl", "sphinx_docs_library")
load("//pw_build:compatibility.bzl", "incompatible_with_mcu")
load("//pw_protobuf_compiler:pw_proto_library.bzl", "pwpb_proto_library")
load("//pw_unit_test:pw_cc_test.bzl", "pw_cc_test")

package(
    default_visibility = ["//visibility:public"],
    features = ["-layering_check"],
)

licenses(["notice"])

cc_library(
    name = "uuid",
    srcs = [
        "uuid.cc",
    ],
    hdrs = [
        "public/pw_snapshot/uuid.h",
    ],
    features = ["-conversion_warnings"],
    strip_include_prefix = "public",
    deps = [
        ":metadata_proto_pwpb",
        "//pw_bytes",
        "//pw_protobuf",
        "//pw_status",
    ],
)

proto_library(
    name = "metadata_proto",
    srcs = [
        "pw_snapshot_protos/snapshot_metadata.proto",
    ],
    import_prefix = "pw_snapshot_metadata_proto",
    strip_import_prefix = "/pw_snapshot/pw_snapshot_protos",
    deps = [
        "//pw_tokenizer:tokenizer_proto",
    ],
)

py_proto_library(
    name = "metadata_proto_py_pb2",
    deps = [":metadata_proto"],
)

proto_library(
    name = "snapshot_proto",
    srcs = [
        "pw_snapshot_protos/snapshot.proto",
    ],
    import_prefix = "pw_snapshot_protos",
    strip_import_prefix = "/pw_snapshot/pw_snapshot_protos",
    deps = [
        ":metadata_proto",
        "//pw_chrono:chrono_proto",
        "//pw_cpu_exception_cortex_m:cpu_state_protos",
        "//pw_cpu_exception_risc_v:cpu_state_protos",
        "//pw_log:log_proto",
        "//pw_thread:thread_proto",
    ],
)

py_proto_library(
    name = "snapshot_proto_py_pb2",
    deps = [":snapshot_proto"],
)

pwpb_proto_library(
    name = "metadata_proto_pwpb",
    deps = [":snapshot_proto"],
)

pwpb_proto_library(
    name = "snapshot_proto_pwpb",
    deps = [":snapshot_proto"],
)

pw_cc_test(
    name = "cpp_compile_test",
    srcs = [
        "cpp_compile_test.cc",
    ],
    features = ["-conversion_warnings"],
    deps = [":snapshot_proto_pwpb"],
)

pw_cc_test(
    name = "uuid_test",
    srcs = [
        "uuid_test.cc",
    ],
    features = ["-conversion_warnings"],
    deps = [
        ":metadata_proto_pwpb",
        ":uuid",
        "//pw_bytes",
        "//pw_protobuf",
        "//pw_result",
        "//pw_status",
    ],
)

sphinx_docs_library(
    name = "docs",
    srcs = [
        "design_discussion.rst",
        "docs.rst",
        "module_usage.rst",
        "proto_format.rst",
        "setup.rst",
    ],
    prefix = "pw_snapshot/",
    target_compatible_with = incompatible_with_mcu(),
)
