# Copyright 2020 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

buildconfig = "//BUILDCONFIG.gn"
import("//build_overrides/pigweed_environment.gni")

# Generate a compilation database for all targets.
export_compile_commands = [ ":*" ]

default_args = {
  # Default all upstream Pigweed toolchains to enable pw::span asserts.
  pw_span_ENABLE_ASSERTS = true

  # Don't allow a plain .options file extension for upstream pwpb code.
  pw_protobuf_compiler_NO_GENERIC_OPTIONS_FILES = true

  pw_build_PIP_CONSTRAINTS =
      [ "//pw_env_setup/py/pw_env_setup/virtualenv_setup/constraint.list" ]

  pw_build_PIP_REQUIREMENTS = [ "//pw_env_setup/py/pw_env_setup/virtualenv_setup/pigweed_upstream_requirements.txt" ]

  pw_build_PYTHON_BUILD_VENV = "//pw_env_setup:upstream_pigweed_build_venv"

  # TODO(b/292098416): This should stay false until a cross-platform constraint
  # file workflow is implemented.
  pw_build_PYTHON_PIP_INSTALL_REQUIRE_HASHES = false

  pw_build_PYTHON_PIP_INSTALL_FIND_LINKS =
      [ "${pw_env_setup_CIPD_MSRV_PYTHON}/pip_cache" ]

  pw_toolchain_STATIC_ANALYSIS_SKIP_SOURCES_RES = [
    # Exclude third-party headers from static analysis.
    "third_party/.*",

    # Eventually, we should burn down all the findings in this directory.
    "pw_bluetooth_sapphire/.*",

    # The below patterns are managed by pw_package
    # ============================================

    # Exclude GoogleTest, which fails some clang-tidy checks.
    ".*/packages/googletest/src/.*",
    ".*/packages/googlemock/src/.*",

    # Exclude Boringssl, which fails some clang-tidy checks.
    ".*/packages/boringssl/src/.*",

    # Exclude mbedtls, which fails some clang-tidy checks.
    ".*/packages/mbedtls/library/.*",

    # Exclude third party CHRE code from static analysis.
    ".*/packages/chre/.*",
  ]

  pw_toolchain_STATIC_ANALYSIS_SKIP_INCLUDE_PATHS = [
    # Code generated by third-party tool.
    "pw_tls_client/generate_test_data",

    # The below patterns are managed by pw_package
    # ============================================

    # Exclude GoogleTest, which fails some clang-tidy checks.
    ".*/packages/googletest/include.*",
    ".*/packages/googlemock/include.*",

    # Exclude Boringssl, which fails some clang-tidy checks.
    ".*/packages/boringssl/src/include.*",

    # Exclude mbedtls, which fails some clang-tidy checks.
    ".*/packages/mbedtls/include.*",

    # Exclude third party CHRE code from static analysis.
    ".*/packages/chre/.*",
  ]
}
