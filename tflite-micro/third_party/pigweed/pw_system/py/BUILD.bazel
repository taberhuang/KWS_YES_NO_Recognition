# Copyright 2022 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@rules_python//python:defs.bzl", "py_library")
load("//pw_build:python.bzl", "pw_py_binary")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "pw_system_lib",
    srcs = [
        "pw_system/__init__.py",
        "pw_system/console.py",
        "pw_system/device.py",
        "pw_system/device_connection.py",
        "pw_system/device_sim.py",
        "pw_system/device_tracing.py",
        "pw_system/find_serial_port.py",
        "pw_system/snapshot.py",
        "pw_system/trace_client.py",
    ],
    imports = ["."],
    deps = [
        "//pw_cli/py:pw_cli",
        "//pw_console/py:pw_console",
        "//pw_file:file_proto_py_pb2",
        "//pw_hdlc/py:pw_hdlc",
        "//pw_log:log_proto_py_pb2",
        "//pw_log/py:pw_log",
        "//pw_log_rpc/py:pw_log_rpc",
        "//pw_metric:metric_proto_py_pb2",
        "//pw_metric/py:pw_metric",
        "//pw_rpc:echo_py_pb2",
        "//pw_rpc/py:pw_rpc",
        "//pw_snapshot/py:pw_snapshot",
        "//pw_stream/py:pw_stream",
        "//pw_system:device_service_py_pb2",
        "//pw_thread:thread_proto_py_pb2",
        "//pw_thread:thread_snapshot_service_py_pb2",
        "//pw_thread/py:pw_thread",
        "//pw_tokenizer:tokenizer_proto_py_pb2",
        "//pw_tokenizer/py:pw_tokenizer",
        "//pw_trace/py:pw_trace",
        "//pw_trace_tokenized:proto_py",
        "//pw_trace_tokenized/py:pw_trace_tokenized",
        "//pw_transfer/py:pw_transfer",
        "//pw_unit_test:unit_test_py_pb2",
        "//pw_unit_test/py:pw_unit_test",
        "@pigweed_python_packages//debugpy",
        "@pigweed_python_packages//pyserial",
    ],
)

py_library(
    name = "pw_system_benchmark_runner",
    srcs = [
        "pw_system/benchmark_runner/__init__.py",
        "pw_system/benchmark_runner/__main__.py",
        "pw_system/benchmark_runner/benchmark_runner.py",
    ],
    imports = ["."],
    deps = [
        ":pw_system_lib",
        "//pw_console/py:pw_console",
        "//pw_protobuf:common_py_pb2",
        "//pw_rpc:benchmark_py_pb2",
        "//pw_rpc:echo_py_pb2",
        "//pw_rpc/py:pw_rpc_benchmark",
    ],
)

pw_py_binary(
    name = "pw_system_console",
    srcs = [
        "pw_system/console.py",
    ],
    main = "pw_system/console.py",
    deps = [
        ":pw_system_lib",
        "@pigweed_python_packages//debugpy",
    ],
)

pw_py_binary(
    name = "device_sim",
    srcs = [
        "pw_system/device_sim.py",
    ],
    deps = [
        ":pw_system_lib",
    ],
)
