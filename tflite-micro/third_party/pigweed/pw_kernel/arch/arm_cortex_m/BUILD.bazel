# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@rules_rust//rust:defs.bzl", "rust_doc", "rust_library")
load("//pw_kernel:flags.bzl", "KERNEL_TEST_DEPS", "KERNEL_TEST_RUSTC_FLAGS")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "arch_arm_cortex_m",
    srcs = [
        "exceptions.rs",
        "features.rs",
        "lib.rs",
        "protection.rs",
        "regs.rs",
        "regs/mpu.rs",
        "regs/msr.rs",
        "regs/nvic.rs",
        "regs/scb.rs",
        "regs/systick.rs",
        "spinlock.rs",
        "syscall.rs",
        "threads.rs",
        "timer.rs",
    ],
    crate_features = ["user_space"],
    proc_macro_deps = [
        "//pw_kernel/macros:arm_cortex_m_macro",
        "@rust_crates//:paste",
    ],
    rustc_flags = KERNEL_TEST_RUSTC_FLAGS,
    tags = ["kernel"],
    target_compatible_with = select({
        "@platforms//cpu:armv8-m": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        "//pw_kernel/config:kernel_config",
        "//pw_kernel/kernel",
        "//pw_kernel/lib/foreign_box",
        "//pw_kernel/lib/list",
        "//pw_kernel/lib/log_if",
        "//pw_kernel/lib/pw_assert",
        "//pw_kernel/lib/pw_cast",
        "//pw_kernel/lib/pw_status",
        "//pw_kernel/lib/regs",
        "//pw_kernel/lib/time",
        "//pw_kernel/syscall:syscall_defs",
        "@pigweed//pw_log/rust:pw_log",
        "@rust_crates//:cortex-m",
        "@rust_crates//:cortex-m-rt",
    ] + KERNEL_TEST_DEPS,
)

rust_doc(
    name = "arm_cortex_m_docs",
    crate = ":arch_arm_cortex_m",
    rustdoc_flags = [
        "--document-private-items",
        "--cfg=feature=\"user_space\"",
        "--cfg=feature=\"arch_arm_cortex_m\"",
    ],
    tags = ["kernel"],
)
