# Copyright 2020 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

import("//build_overrides/pigweed.gni")

import("$dir_pw_build/python.gni")

pw_python_package("py") {
  setup = [
    "pyproject.toml",
    "setup.cfg",
  ]
  sources = [
    "pw_presubmit/__init__.py",
    "pw_presubmit/bazel_checks.py",
    "pw_presubmit/bazel_parser.py",
    "pw_presubmit/block_submission.py",
    "pw_presubmit/build.py",
    "pw_presubmit/cli.py",
    "pw_presubmit/cpp_checks.py",
    "pw_presubmit/format/__init__.py",
    "pw_presubmit/format/bazel.py",
    "pw_presubmit/format/cmake.py",
    "pw_presubmit/format/core.py",
    "pw_presubmit/format/cpp.py",
    "pw_presubmit/format/css.py",
    "pw_presubmit/format/gn.py",
    "pw_presubmit/format/go.py",
    "pw_presubmit/format/java.py",
    "pw_presubmit/format/javascript.py",
    "pw_presubmit/format/json.py",
    "pw_presubmit/format/markdown.py",
    "pw_presubmit/format/owners.py",
    "pw_presubmit/format/prettier.py",
    "pw_presubmit/format/private/__init__.py",
    "pw_presubmit/format/private/cli.py",
    "pw_presubmit/format/private/cli_support.py",
    "pw_presubmit/format/protobuf.py",
    "pw_presubmit/format/python.py",
    "pw_presubmit/format/rst.py",
    "pw_presubmit/format/rust.py",
    "pw_presubmit/format/starlark.py",
    "pw_presubmit/format/test_data/__init__.py",
    "pw_presubmit/format/typescript.py",
    "pw_presubmit/format/whitespace.py",
    "pw_presubmit/format_code.py",
    "pw_presubmit/git_repo.py",
    "pw_presubmit/gitmodules.py",
    "pw_presubmit/inclusive_language.py",
    "pw_presubmit/install_hook.py",
    "pw_presubmit/javascript_checks.py",
    "pw_presubmit/json_check.py",
    "pw_presubmit/keep_sorted.py",
    "pw_presubmit/module_owners.py",
    "pw_presubmit/ninja_parser.py",
    "pw_presubmit/npm_presubmit.py",
    "pw_presubmit/owners_checks.py",
    "pw_presubmit/pigweed_local_presubmit.py",
    "pw_presubmit/pigweed_presubmit.py",
    "pw_presubmit/presubmit.py",
    "pw_presubmit/presubmit_context.py",
    "pw_presubmit/python_checks.py",
    "pw_presubmit/repo.py",
    "pw_presubmit/shell_checks.py",
    "pw_presubmit/source_in_build.py",
    "pw_presubmit/todo_check.py",
    "pw_presubmit/tools.py",
    "pw_presubmit/upstream_checks.py",
  ]
  tests = [
    "bazel_checks_test.py",
    "bazel_parser_test.py",
    "block_submission_test.py",
    "context_test.py",
    "cpp_checks_test.py",
    "format_core_test.py",
    "gitmodules_test.py",
    "inclusive_language_test.py",
    "keep_sorted_test.py",
    "ninja_parser_test.py",
    "presubmit_test.py",
    "owners_checks_test.py",
    "todo_check_test.py",
    "tools_test.py",
  ]

  python_deps = [
    "$dir_pw_build/py",
    "$dir_pw_cli/py",
    "$dir_pw_env_setup/py",
    "$dir_pw_package/py",
  ]
  pylintrc = "$dir_pigweed/.pylintrc"
  mypy_ini = "$dir_pigweed/.mypy.ini"
  ruff_toml = "$dir_pigweed/.ruff.toml"
}

# This is a separate package to avoid dependency cycles with pw_build.
pw_python_package("pigweed_format") {
  generate_setup = {
    metadata = {
      name = "pigweed_format"
      version = "0.0.1"
    }
  }
  sources = [ "pigweed_format/__main__.py" ]
  inputs = [
    "pw_presubmit/format/test_data/bazel_test_data.bazel",
    "pw_presubmit/format/test_data/bazel_test_data_golden.bazel",
    "pw_presubmit/format/test_data/clang_format_config",
    "pw_presubmit/format/test_data/cpp_test_data.cc",
    "pw_presubmit/format/test_data/cpp_test_data_golden.cc",
    "pw_presubmit/format/test_data/gn_test_data.gn",
    "pw_presubmit/format/test_data/gn_test_data_golden.gn",
    "pw_presubmit/format/test_data/json_test_data.json",
    "pw_presubmit/format/test_data/json_test_data_golden.json",
    "pw_presubmit/format/test_data/malformed_file.txt",
    "pw_presubmit/format/test_data/python_test_data.py",
    "pw_presubmit/format/test_data/python_test_data_golden.py",
    "pw_presubmit/format/test_data/rst_test_data.rst",
    "pw_presubmit/format/test_data/rst_test_data_golden.rst",
    "pw_presubmit/format/test_data/rust_test_data.rs",
    "pw_presubmit/format/test_data/rust_test_data_golden.rs",
    "pw_presubmit/format/test_data/rustfmt.toml",
  ]
  tests = [
    "bazel_format_test.py",
    "cpp_format_test.py",
    "format_testing_utils.py",
    "gn_format_test.py",
    "json_format_test.py",
    "python_format_test.py",
    "rst_format_test.py",
    "rust_format_test.py",
    "whitespace_format_test.py",
  ]
  python_deps = [
    "$dir_pw_build/py",
    "$dir_pw_cli/py",
    "$dir_pw_presubmit/py",
  ]
  pylintrc = "$dir_pigweed/.pylintrc"
  mypy_ini = "$dir_pigweed/.mypy.ini"
  ruff_toml = "$dir_pigweed/.ruff.toml"
}
