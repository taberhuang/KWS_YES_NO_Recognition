# Copyright 2024 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@rules_platform//platform_data:defs.bzl", "platform_data")
load("@rules_python//python:defs.bzl", "py_library")
load("//pw_build:python.bzl", "pw_py_binary", "pw_py_test")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "pw_ide",
    srcs = [
        "pw_ide/__init__.py",
        "pw_ide/activate.py",
        "pw_ide/cli.py",
        "pw_ide/commands.py",
        "pw_ide/cpp.py",
        "pw_ide/editors.py",
        "pw_ide/exceptions.py",
        "pw_ide/python.py",
        "pw_ide/settings.py",
        "pw_ide/symlinks.py",
        "pw_ide/vscode.py",
    ],
    data = [
        "pw_ide/py.typed",
    ],
    imports = ["."],
    deps = [
        "//pw_cli/py:pw_cli",
        "//pw_config_loader/py:pw_config_loader",
        "@pigweed_python_packages//json5",
        "@pigweed_python_packages//pyyaml",
    ],
)

py_library(
    name = "compile_commands_generator",
    srcs = ["pw_ide/compile_commands_generator.py"],
    imports = ["."],
    deps = ["@pigweed_python_packages//json5"],
)

pw_py_binary(
    name = "compile_commands_generator_binary_internal",
    srcs = ["pw_ide/compile_commands_generator.py"],
    main = "pw_ide/compile_commands_generator.py",
    deps = [
        ":compile_commands_generator",
        "@pigweed_python_packages//json5",
    ],
)

# We wrap our binary here to always build it for host_platform
# regardless of the config passed to it.
platform_data(
    name = "compile_commands_generator_binary",
    platform = "@bazel_tools//tools:host_platform",
    target = ":compile_commands_generator_binary_internal",
)

pw_py_binary(
    name = "bazel_canonicalize_args",
    srcs = ["pw_ide/bazel_canonicalize_args.py"],
    main = "pw_ide/bazel_canonicalize_args.py",
    deps = [
        ":compile_commands_generator",
    ],
)

pw_py_binary(
    name = "pw_ide_cli",
    srcs = ["pw_ide/__main__.py"],
    main = "pw_ide/__main__.py",
    deps = [
        ":pw_ide",
    ],
)

pw_py_test(
    name = "commands_test",
    size = "small",
    srcs = [
        "commands_test.py",
        "test_cases.py",
    ],
    deps = [":pw_ide"],
)

pw_py_test(
    name = "cpp_test",
    size = "small",
    srcs = [
        "cpp_test.py",
        "test_cases.py",
    ],
    deps = [":pw_ide"],
)

pw_py_test(
    name = "cpp_test_fake_env",
    size = "small",
    srcs = ["cpp_test_fake_env.py"],
    deps = [":pw_ide"],
)

pw_py_test(
    name = "editors_test",
    size = "small",
    srcs = [
        "editors_test.py",
        "test_cases.py",
    ],
    deps = [":pw_ide"],
)

pw_py_test(
    name = "vscode_test",
    size = "small",
    srcs = [
        "test_cases.py",
        "vscode_test.py",
    ],
    deps = [":pw_ide"],
)

pw_py_test(
    name = "compile_commands_generator_test",
    size = "small",
    srcs = ["compile_commands_generator_test.py"],
    deps = [
        ":compile_commands_generator",
        ":pw_ide",
    ],
)

pw_py_test(
    name = "activate_tests",
    srcs = [
        "activate_tests.py",
        "test_cases.py",
    ],
    deps = [":pw_ide"],
)
