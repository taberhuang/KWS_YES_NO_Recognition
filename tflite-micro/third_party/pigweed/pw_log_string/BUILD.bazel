# Copyright 2022 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@rules_cc//cc:cc_library.bzl", "cc_library")
load("@rules_python//sphinxdocs:sphinx_docs_library.bzl", "sphinx_docs_library")
load("//pw_build:compatibility.bzl", "incompatible_with_mcu")
load("//pw_build:pw_facade.bzl", "pw_facade")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

cc_library(
    name = "pw_log_string",
    hdrs = [
        "public_overrides/pw_log_backend/log_backend.h",
    ],
    strip_include_prefix = "public_overrides",
    deps = [
        ":handler.facade",
        "//pw_preprocessor",
    ],
)

pw_facade(
    name = "handler",
    srcs = ["handler.cc"],
    hdrs = [
        "public/pw_log_string/config.h",
        "public/pw_log_string/handler.h",
    ],
    backend = ":handler_backend",
    strip_include_prefix = "public",
    deps = [
        "//pw_preprocessor",
    ],
)

label_flag(
    name = "handler_backend",
    build_setting_default = "//pw_build:unspecified_backend",
)

label_flag(
    name = "config_override",
    build_setting_default = "//pw_build:default_module_config",
)

alias(
    name = "impl",
    actual = ":handler",
)

cc_library(
    name = "wrap_newlib_assert",
    srcs = [
        "wrap_newlib_assert.cc",
    ],
    linkopts = [
        "-Wl,--wrap=__assert_func",
    ],
    deps = [
        ":handler",
        "//pw_log",
    ],
    alwayslink = 1,
)

filegroup(
    name = "doxygen",
    srcs = [
        "public/pw_log_string/handler.h",
    ],
)

sphinx_docs_library(
    name = "docs",
    srcs = [
        "docs.rst",
    ],
    prefix = "pw_log_string/",
    target_compatible_with = incompatible_with_mcu(),
)
